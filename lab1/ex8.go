package main

import (
	"fmt"
	"math"
	"reflect"
	"unsafe"
)

func main() {
	var defaultFloat float32
	var defaultDouble float64 = 5.5

	fmt.Println("defaultfloat       = ", defaultFloat)
	fmt.Printf("defaultDouble (%T) = %f\n\n", defaultDouble, defaultDouble)

	fmt.Println("MAX float32        = ", math.MaxFloat32)
	fmt.Println("MIN float32        = ", math.SmallestNonzeroFloat32, "\n")

	fmt.Println("MAX float64        = ", math.MaxFloat64)
	fmt.Println("MIN float64        = ", math.SmallestNonzeroFloat64, "\n")

	// –ó–∞–≤–¥–∞–Ω–Ω—è. 1. –°—Ç–≤–æ—Ä—ñ—Ç—å –∑–º—ñ–Ω–Ω—ñ —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –∑–∞–ø–∏—Å —Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º. –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–≤–µ—Å—Ç–∏
	fmt.Println("–ó–∞–≤–¥–∞–Ω–Ω—è. 1. –°—Ç–≤–æ—Ä—ñ—Ç—å –∑–º—ñ–Ω–Ω—ñ —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –∑–∞–ø–∏—Å —Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º. –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–≤–µ—Å—Ç–∏")
	var defaultComplex64 complex64
	complexNumber := 5683 + 23i
	fmt.Println("defaultComplex:", defaultComplex64, "type: ", reflect.TypeOf(defaultComplex64))
	fmt.Println("complex:", complexNumber, "type: ", reflect.TypeOf(complexNumber))

	runesArray := []rune("üåçüòä")
	fmt.Println("runes:", runesArray, "type: ", reflect.TypeOf(runesArray))

	var defaultString string
	word := "Supercalifragilisticexpialidocious"
	fmt.Println("defaultString:", defaultString, "type: ", reflect.TypeOf(defaultString))
	fmt.Println("string:", word, "type: ", reflect.TypeOf(word))

	var defaultBoolean bool
	isTrue := true
	fmt.Println("defaultBoolean:", defaultBoolean, "type: ", reflect.TypeOf(defaultBoolean))
	fmt.Println("boolean:", isTrue, "type: ", reflect.TypeOf(isTrue), "size: ", unsafe.Sizeof(isTrue))

	var defaultUint8 uint8
	numberInt := 127
	fmt.Println("defaultUint8:", defaultUint8, "type: ", reflect.TypeOf(defaultUint8))
	fmt.Println("int:", numberInt, "type: ", reflect.TypeOf(numberInt), "size: ", unsafe.Sizeof(numberInt))

	var defaultFloat32 float32
	fmt.Println("float32:", defaultFloat32, "type: ", reflect.TypeOf(defaultFloat32), "size: ", unsafe.Sizeof(defaultFloat32))

	first, second := 5.2, -60234545.23
	fmt.Println("float64:", first, "type: ", reflect.TypeOf(first), "size: ", unsafe.Sizeof(first))
	fmt.Println("float64:", second, "type: ", reflect.TypeOf(second), "size: ", unsafe.Sizeof(second))
}
